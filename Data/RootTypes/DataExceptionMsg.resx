<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema
    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotGetDataReader" xml:space="preserve">
    <value>There was a problem loading the DataReader for data source '{0}'.</value>
  </data>
  <data name="CannotGetDataTable" xml:space="preserve">
    <value>There was a problem loading the DataTable for data source '{0}'.</value>
  </data>
  <data name="CannotExecuteActionQuery" xml:space="preserve">
    <value>There was a problem executing '{0}'. Data operation parameters were: ({1})</value>
  </data>
  <data name="CannotGetObjectId" xml:space="preserve">
    <value>There was a problem retrieving the object Id returned by '{0}' from the database.</value>
  </data>
  <data name="CannotGetScalar" xml:space="preserve">
    <value>There was a problem reading the value returned by '{0}'.</value>
  </data>
  <data name="CannotGetDataView" xml:space="preserve">
    <value>There was a problem loading the DataView for data source '{0}'.</value>
  </data>
  <data name="CannotGetFieldValue" xml:space="preserve">
    <value>There was a problem retrieving the field value '{1}' of the data source '{0}'.</value>
  </data>
  <data name="CacheRestoreRemovedObjectCallbackFails" xml:space="preserve">
    <value>There was a problem executing the callback of the async method that updates the data cache.</value>
  </data>
  <data name="InvalidCacheItemRemovedReason" xml:space="preserve">
    <value>Data cache RemovedCallback reason '{0}' was not defined.</value>
  </data>
  <data name="InvalidDatabaseTechnology" xml:space="preserve">
    <value>Invalid database technology {0}.</value>
  </data>
  <data name="CommitFails" xml:space="preserve">
    <value>Data transaction commit failed: {0}</value>
  </data>
  <data name="RollbackFails" xml:space="preserve">
    <value>Data transaction rollback failed: {0}</value>
  </data>
  <data name="TransactionCommited" xml:space="preserve">
    <value>The transaction's rollback can't be executed because previously a commit operation was invoked.</value>
  </data>
  <data name="TransactionAlreadyCommited" xml:space="preserve">
    <value>The transaction's commit can't be executed. It was already invoked and so a new data transaction is required.</value>
  </data>
  <data name="DataContextOutOfTransaction" xml:space="preserve">
    <value>There is not a transaction created for the data context.</value>
  </data>
  <data name="DataContextTooManyItemsForRemove" xml:space="preserve">
    <value>Attempting to remove more data context items than what it contains.</value>
  </data>
  <data name="AsynchronousCommitNotCalled" xml:space="preserve">
    <value>The wait time have finished and the asynchronous transaction's commit method was never invoked.</value>
  </data>
  <data name="ObjectIdOutOfValidBounds" xml:space="preserve">
    <value>The generated id {0} for the new instance is outside of the bound established by the data rules.</value>
  </data>
  <data name="DataSourceNotDefined" xml:space="preserve">
    <value>There is not defined a data source with name '{0}' inside DBDataSources table.</value>
  </data>
  <data name="CannotRegisterObjectIdFactory" xml:space="preserve">
    <value>There was a problem registering the object Id factory using remoting services channel {0}.</value>
  </data>
  <data name="ObjectRemovedFromDataCache" xml:space="preserve">
    <value>Scavenging message: Item with ID {0} was removed from the system's data cache. Reason: {1}.</value>
  </data>
  <data name="WrongQueryParametersNumber" xml:space="preserve">
    <value>The parameters received are not the same of those defined for data source '{0}' inside table DBQueryParameters.</value>
  </data>
  <data name="ObjectIdRuleNotSet" xml:space="preserve">
    <value>There is not defined an ID creation rule for types with name '{0}'.</value>
  </data>
  <data name="DuplicateObjectIdFactory" xml:space="preserve">
    <value>WARNING: Empiria.Data.ObjectIdFactory is executing twice. To keep data integrity just one object ID factory can be running for the overall system. In this case, the system detected that another OS process had previously registered an object ID factory.</value>
  </data>
  <data name="CannotParseDataIntegrationServer" xml:space="preserve">
    <value>There was a problem loading the Empiria.Security.WebServer instance with id = {0}.</value>
  </data>
  <data name="UndefinedDataPublishRule" xml:space="preserve">
    <value>There was a problem trying to publish the data object '{0}': The data publish rule is not defined in the set of rules of the source server.</value>
  </data>
  <data name="CannotCreateDataTask" xml:space="preserve">
    <value>There was a problem trying to save an item into the data integration queue.\n\nSource: {0}\nTarget: {1}\nOperation: {2}\nParameters:{3}\n\nPlease contact your technical support area.</value>
  </data>
  <data name="CannotLoadDataIntegrationRules" xml:space="preserve">
    <value>There was a problem reading the system's data integration rules.</value>
  </data>
  <data name="CannotDoPostExecutionTask" xml:space="preserve">
    <value>There was a problem trying to execute the post action of the data operation '{0}', using this parameters set: '{1}'. It can be a data integration configuration issue.</value>
  </data>
  <data name="DuplicateDataIntegrationEngine" xml:space="preserve">
    <value>WARNING: DataIntegrationEngine is executing twice. To keep data integrity just one data integration engine can be running for the overall system. In this case, the system detected that another OS process had previously registered a data integration engine.</value>
  </data>
  <data name="DataIntegrationWSProxyException" xml:space="preserve">
    <value>There was a problem attempting to execute the data integration operation '{0}' using a proxy to the web services server '{1}'.</value>
  </data>
</root>